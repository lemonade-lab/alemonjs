import { Messagetype } from 'alemon'
export interface AlemonMsgType extends Messagetype {
  //公信转私信
  replyPrivate: (
    e: Messagetype,
    msg?: string | object | Array<string>,
    obj?: object
  ) => Promise<boolean>
  //是否是管理类机器人
  isManageRobot: boolean
}

/**
 * ********************
 * 会被主人限制的权限
 * *******************
 * 是否允许主动发消息：
 * 允许发送的次数
 * 是否允许私聊
 */

/**
 * 插件需要分为
 *
 * 管理类插件(只做管理相关互动)
 * (管理机器人在频道中任意奔放,
 * 不适合做游戏等交互服务,
 * 不利于分化频道消息)
 *
 * 功能类插件(只做服务)
 * 没有管理权限,
 * 由频道主去管理
 * 那个机器人可以在那个频道发言
 *
 * 机器人没有增加删除频道的权限
 *
 * 当游戏玩家需要开一个自己的频道空间时
 * 当仅能向频道主申请开通一个专用频道。
 * 并分配身份
 * (控制只允许对应身份组的成员可聊天可查看)
 */

/**
 * *************
 * 管理类机器人（超级管理）
 * ************
 * 获取身份组信息
 * ************
 * 全局禁言
 * 指定成员禁言
 * **********
 * 获取子频道权限
 * 修改子频道权限
 * 批量修改子频道权限
 * *************
 * 获取频道身份组
 * 创建频道身分组
 * 修改频道身份组
 * 删除频道身份组
 * *******
 * 添加频道身份组-用户
 * 删除频道身分组-用户
 * **********
 * 查看身份组权限
 * 设置身分组权限
 * ***********
 * 创建日程
 * 修改日程
 * 删除日程
 * ************
 * 创建子频道公告
 * 删除子频道公告
 * ************
 * 创建频道全局公告
 * 删除频道全局公告
 * ***********
 * 创建精华消息
 * 获取精华消息
 * 删除精华消息
 */

/**
 * ************
 * 普通机器人：（分组管理员、子频道管理）
 * ************
 * 获取成员信息
 * 获取频道      (可以做数据统计)
 * ****
 * 获取子频道列表
 * 获取子频道信息
 * 获取子频道-语音/直播-在线人数
 * *************
 * 获取频道日程列表
 * 获取单个日程信息
 * *************
 * 创建消息     （自己）
 * 获取指定消息 （他人）
 * 发表表情表态（自己）
 * 删除表情表态 (自己)
 * 获取频道消息频率
 * 设置消息限额引导 ？？
 * 拉去表情表态列表 (使用消息ID)
 */

/**
 * 子频道机器人(也是普通机器人)
 * 机器人没有身份组的概念
 */
